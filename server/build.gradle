buildscript {

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

plugins {
    id 'org.unbroken-dome.test-sets' version '1.3.2'
}

//apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: "kotlin-spring"
apply plugin: "groovy"



repositories {
    jcenter()
}

sourceCompatibility = java_version
targetCompatibility = java_version

compileKotlin {
    sourceCompatibility = java_version
    targetCompatibility = java_version

    kotlinOptions {
        jvmTarget = java_version
        apiVersion = "1.1"
        languageVersion = "1.1"
    }
}


testSets {
    integrationTest
}

bootRun.dependsOn integrationTest
springBoot {
    mainClass = 'org.openclassrooms.cities.ApplicationKt'
}

def testDependencies = ["org.codehaus.groovy:groovy-all:2.4.10",
                        "org.spockframework:spock-core:1.1-groovy-2.4-rc-4",
                        "org.spockframework:spock-spring:1.1-groovy-2.4-rc-4",
                        'com.geowarin:spring-spock-mvc:0.2.1',
                        "org.springframework.boot:spring-boot-starter-test:$spring_boot_version"]

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
    compile("org.springframework.boot:spring-boot-devtools")


    testCompile testDependencies



}


tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}s")
}