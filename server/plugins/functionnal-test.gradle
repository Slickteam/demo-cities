/**
 * This file add integration test to the build
 *
 * integration test source file can be add in 'src/integrationTest/java' or 'src/integrationTest/groovy'
 *
 * to launch it :
 * 'gradle integrationTest'
 *
 * 'gradle build' don't launch integration tests
 *
 * 'gradle BootRun' launch integration tests
 */

sourceSets {
    functionalTest {


        if (plugins.withType(GroovyPlugin)) {
            groovy {
                compileClasspath += main.output + test.output + integrationTest.output
                runtimeClasspath += main.output + test.output + integrationTest.output
            }
        }
        if (plugins.withType(JavaPlugin)) {
            java {
                compileClasspath += main.output + test.output + integrationTest.output
                runtimeClasspath += main.output + test.output + integrationTest.output
            }
        }

    }

}


// functional test can use all dependencies of integration test
configurations {
    functionalTestCompile.extendsFrom integrationTestCompile
}


// create the functional test task
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}


//integration test are run
functionalTest.mustRunAfter test

//gradle bootrun launch the integratinos test
//check.dependsOn integrationTest

/**
 * separate integration and unit test reports
 * unit tests is in 'build/reports/tests'
 * integration tests report is in 'build/reports/functionalTests'
 */
tasks.withType(Test) {
    reports.html.destination file("${reporting.baseDir}/${name}s")
}

