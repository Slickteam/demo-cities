import org.apache.tools.ant.taskdefs.condition.Os


apply from: "plugins/functionnal-test.gradle"
apply from: "plugins/osSpecificDownloads.gradle"

//you can find a nice exemple on this site
//"https://github.com/codeborne/selenide/blob/master/build.gradle
// I didn't manage to use firefox for now
ext.drivers = ["chrome"]

drivers.each { driver ->
    task ("${driver}FuncTest", type: Test) {

        dependsOn build

        testClassesDir = sourceSets.functionnalTest.output.classesDir
        classpath = sourceSets.functionnalTest.runtimeClasspath


        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
        systemProperty "geb.env", driver

        // If you wanted to set the baseUrl in your buildâ€¦
        // systemProperty "geb.build.baseUrl", "http://myapp.com"
    }
}

chromeFuncTest {
    dependsOn unzipChromeDriver

    def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
    systemProperty "webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath
}

firefoxFuncTest {
    dependsOn unzipGeckoDriver
    systemProperties['selenide.browser'] = 'firefox'
    def geckoDriverFileName = Os.isFamily(Os.FAMILY_WINDOWS) ? "geckoDriver.exe" : "geckoDriver"
    systemProperty "webdriver.gecko.driver", new File(unzipGeckoDriver.outputs.files.singleFile, geckoDriverFileName).absolutePath

}

functionalTest {
    dependsOn drivers.collect { tasks["${it}FuncTest"] }
    enabled = false
}